This document describes the form api. The files will be stored in src/be/form and will be accessed by using domain/functionName.js.

Pages will use the request body for parameters and cookies for authentication.
The parameters should be passed using the request body as usual on posts.
The forms should use multipart/form-data for enctype.
Files should be sent with an input of type "file" using name "files".
Pages that require proper validation will redirect the user to /login.html if authentication fails. Validation will require both the login and hash cookies to be set. The hash is the hash created when an account is created or performs login.
Array parameters will be split using commas and spaces will be ignored.
Boolean parameters will be just checked if they return a true condition on the server using simple js evaluation (if(parameters.X)).
Pages with optional json output will require the get parameter "json" with any value to output the data in json form. 

------------------------------------------------------------------------------------------

PAG_ID::01

Name: newThread

Description: creates a new thread. Accepts files.

Parameters:
    name: name of the poster. 32 characters.
    email: e-mail of the poster. 64 characters.
    message*: message to be posted. 2048 characters.
    subject: subject of the thread. 128 characters.
    boardUri*: URI of the board. Will be included in the posting form at the generation stage.
    password: password to be used for deletion. 8 characters.
    captcha: captcha input.
    spoiler: if anything is sent, indicates the images should be spoilered.
    flag: id of a flag to be used.

------------------------------------------------------------------------------------------

PAG_ID::02

Name: replyThread

Description: post a reply to a thread. Accepts files.

Parameters:
    name: name of the poster. 32 characters.
    email: e-mail of the poster. 64 characters.
    message*: message to be posted. 2048 characters.
    subject: subject of the thread. 128 characters.
    password: password to be used for deletion. 8 characters.
    boardUri*: URI of the board.
    threadId*: id of the thread. Will be included in the posting form at the generation stage.
    captcha: captcha input.
    spoiler: if anything is sent, indicates the images should be spoilered.
    flag: id of a flag to be used.

------------------------------------------------------------------------------------------

PAG_ID::03

Name: account

Description: display the account page for the user. Requires validation.

Json output(Object): object with the account data. Contains the following fields:
    login: login of the user.
    email: e-mail of the user.
    boardCreationAllowed(boolean): indicates if the user is allowed to create boards.
    ownedBoards(Array): array with the list of uri of boards owned by the user.
    settings(Array): array of account settings. May contain the following values:
        alwaysSignRole: user wishes to always use his role signature when posting.

------------------------------------------------------------------------------------------

PAG_ID::04

Name: registerAccount

Description: creates a new account.

Parameters:
    login*: login of the account. 16 characters. Only a-Z,_ and 0-9 allowed.
    password*: password of the account.
    email: e-mail of the account. 64 characters.
    captcha: input for captcha.

------------------------------------------------------------------------------------------

PAG_ID::05

Name: login

Description: performs login of the user.

Parameters: 
    login: login of the account. 
    password: password of the account.

------------------------------------------------------------------------------------------

PAG_ID::06

Name: logout

Description: logouts the user, invalidating its authentication cookies.

------------------------------------------------------------------------------------------

PAG_ID::07

Name: requestAccountRecovery

Description: sends an e-mail to the user with a link so he can recover his account.

Parameters:
    login: login of the account.
    captcha: captcha input.

------------------------------------------------------------------------------------------

PAG_ID::08

Name: recoverAccount

Description: creates a new random password and e-mails it to the user. It uses get parameters in the URL instead of post parameters.

Parameters:
    login: login of the account.
    hash: hash of the recovery request.

------------------------------------------------------------------------------------------

PAG_ID::09

Name: createBoard

Description: creates a new board. Requires validation.

Parameters:
    boardUri: URI of the new board. 32 characters, lower case and numbers only.
    boardName: name of the new board. 32 characters.
    boardDescription: description of the new board. 128 characters.
    captcha: input for captcha.

------------------------------------------------------------------------------------------

PAG_ID::10

Name: globalManagement

Description: displays page for global staff to perform global management using their global tools like the fancy faggots they are. Requires validation. Forbidden for users with global role higher than 3.

Json output(Object): object with data used in global management. Contains the following fields:
    login: login of the user.
    globalRole: global role of the user.
    staff(Array): array with the global staff of the site the user is allowed to manage. Contains objects each with the following fields:
        login: login of the user.
        globalRole: global role of the user.
    reports(Array): array with the global reports. Contains objects each with the following fields:
        _id: unique id of the report.
        threadId(Number): id of the thread either reported or containing the reported post.
        postId(Number): id of the reported post.
        boardUri: board containing the reported content.
        reason: reason of why the content was reported.
        creation: when the content was reported.

------------------------------------------------------------------------------------------

PAG_ID::11

Name: setGlobalRole

Description: changes the global role of an user. Requires validation.

Parameters:
    login: login of the user.
    role(Number): new role of the user.

------------------------------------------------------------------------------------------

PAG_ID::12

Name: boardManagement

Description: displays page for board management. Requires validation. Allowed only for the board owner and volunteers. This board uses get parameters for ease of use.

Parameters:
    boardUri: uri of the board the user wishes to manage.

Json output(Object): object with data used to manage the board. Contains the following fields:
    usesCustomSpoiler(Boolean): indicates if the board has a custom spoiler image.
    volunteers(Array): array with the logins of the board volunteers.
    boardName: name of the board.
    boardDescription: description of the board.
    anonName: name used for anonymous users.
    hourlyThreadLimit(Number): how many threads can be created on the board within an hour before it locks thread creation.
    autoCaptchaThreshold(Number): how many threads can be created on the board within an hour before captcha is turned on automatically.
    settings(Array): array of settings being used in the board. May contain the following values:
        disableIds: disables recording of thread-wise ids.
        disableCaptcha: disable captchas for posting in the board.
        forceAnonymity: disables the name input.
        unindex: removes board from index.
        allowCode: allows the usage of [code] on postings.
        archive: archives content if the site owner has enabled archiving.
        early404: makes threads with less than 5 replies to be deleted after an hour.
        blockDeletion: makes it impossible for users to delete their own posts.
        requireThreadFile: requires at least one file when creating a thread.
    tags(Array): array of tags for the board.
    boardMessage: message displayed on the board header.
    isOwner(Boolean): indicates if the user owns the board.
    openReports(Array): array of open reports. Each object contains the following fields:
        _id: unique id of the report.
        boardUri: board of the report.
        threadId(Number): thread that either contains the reported post or was reported.
        postId(Number): reported post.
        reason: reason of the report.
        creation: when the content was reported.

------------------------------------------------------------------------------------------

PAG_ID::13

Name: setVolunteer

Description: adds or remove a volunteer from a board. Requires validation. Allowed only for board owners.

Parameters:
    login: login of the user to be either removed or added to the list of board volunteers.
    boardUri: board to have its list of volunteers managed.
    add(Boolean): indicates if the user is to be added or removed from the list of volunteers.

------------------------------------------------------------------------------------------

PAG_ID::14

Name: transferBoardOwnership

Description: transfers the board to another user. Requires validation. Allowed only for board owners and users with global role lower than 2.

Parameters:
    boardUri: board to be transferred.
    login: login of the new owner.

------------------------------------------------------------------------------------------

PAG_ID::15

Name: contentActions

Description: ban, deletes or reports posts and threads. The inputs of the posts will have their names generated on the page generation stage. If the password is not provided for deletion, authentication is required.

Parameters:
    password: password to be used for deletion.
    reason: reason of the report.
    banMessage: message to be displayed in the banned content.
    action: action to be performed. 'ban', 'spoil', 'delete' and 'report' may be used, case insensitive.
    global: if any value is passed, indicates the reports are global.
    expiration: date able to be converted to a new Date of when the bans should expire.    
    captcha: captcha input. Used for banning and reporting.
    deleteUploads: if informed, only the uploads and not the posts and threads will be deleted.

------------------------------------------------------------------------------------------

PAG_ID::16

Name: deleteBoard

Description: deletes a board. Requires validation. Allowed for board owners and users with global role lower than 2.

Parameters:
    boardUri: URI of the board to be deleted.
    confirmDeletion(Boolean): confirmation that the board should be deleted.

------------------------------------------------------------------------------------------

PAG_ID::17

Name: closeReport

Description: closes a report. Requires authentication.

Parameters:
    reportId: id of the report to be closed.

------------------------------------------------------------------------------------------

PAG_ID::18

Name: closedReports

Description: display the list of closed reports. Requires authentication. It uses get parameters instead of post.

Parameters:
    boardUri: board to display the closed reports of. If not informed, global reports will be displayed instead. 

Json output(Array): array with the closed reports. Each object contains the following fields:
    _id: unique id of the report.
    boardUri: board of the report.
    threadId(Number): thread that either contains the reported post or was reported.
    postId(Number): reported post.
    reason: reason of the report.
    closing: when the report was closed.
    closedBy: login of the user that closed the report.

------------------------------------------------------------------------------------------

PAG_ID::19

Name: mod

Description: displays a thread in moderation mode, allowing for the user to ban users, lock and pin the thread. Requires authentication. It uses get parameters instead of post.

Parameters:
    boardUri: board containing the thread.
    threadId: id of the thread.

Json output(Object): object with the data of the thread.
    signedRole: role of the user that posted the thread.
    banMessage: message to be displayed indicating this message was a cause to a ban.
    id: thread-wise id of the poster.
    email: email of the poster.
    markdown: message with html markdown applied.
    flag: url of the used flag.
    flagName: name of the used flag.
    threadId(Number): unique id of the thread inside the board.
    subject: subject of the thread.
    lastEditTime(Date): date of the last time the message of the thread message was edited.
    lastEditLogin: Login of the last user to edit the thread message.
    message: text of the post.
    name: name of the poster.
    proxyIp: ip of the proxy used by the poster.
    ip: hashed and salted ip of the poster.
    range: range of the poster.
    creation(Date): time when the post was created.
    locked(Boolean: indicates if the thread is locked and cannot be replied to.
    cyclic(Boolean): indicates if the thread is cyclic.
    pinned(Boolean): indicates if the thread is pinned and will be listed on top of unpinned threads.
    files(Array): files uploaded with the thread. Each object contains the following fields:
        originalName: original name of the upload.
        path: path for the file.
        md5: md5 hash of the file.
        thumb: path for the file's thumbnail.
        size(Number) size in bytes of the file.
        name: name of the file.
        mime: mime of the file.
        width(Number): width of the file, if image.
        height(Number): size of the file, if image.
    posts(Array): array of the posts in this thread. Each object contains the following fields:
        name: name of the poster.
        signedRole: role of the user that posted the thread.
        email: email of the poster.
        flag: url of the used flag.
        flagName: name of the used flag.
        proxyIp: ip of the proxy used by the poster.
        lastEditTime(Date): date of the last time the message of the thread message was edited.
        lastEditLogin: Login of the last user to edit the thread message.
        postId(Number): unique id of the post inside the board.
        id: thread-wise id of the poster.
        markdown: message with html markdown applied.
        subject: subject of the thread.
        message: text of the post.
        banMessage: message to be displayed indicating this message was a cause to a ban.
        creation(Date): time when the post was created.
        files(Array): pre-aggregated array of files uploaded with the post. Each object contains the following fields:
            md5: md5 hash of the file.
            originalName: original name of the upload.
            path: path for the file.
            thumb: path for the file's thumbnail.
            size(Number) size in bytes of the file.
            width(Number): width of the file, if image.
            mime: mime of the file.
            height(Number): size of the file, if image. 
            name: name of the file.

------------------------------------------------------------------------------------------

PAG_ID::20

Name: bans

Description: displays the global or board bans. Requires authentication. Uses get parameters instead of post.

Parameters:
    boardUri: board to display the bans of. If not informed, global bans will be displayed instead. 

Json output(Array): array with the bans. Each object contains the following values:
    _id: unique id of the ban.
    reason: reason of the ban.
    expiration: when the ban expires.
    appliedBy: login of the user that applied the ban.

------------------------------------------------------------------------------------------

PAG_ID::21

Name: liftBan

Description: removes a ban. Requires authentication.

Parameters:
    banId: id of the ban to be lifted.

------------------------------------------------------------------------------------------

PAG_ID::22

Name: changeThreadSettings

Description: performs general control actions on a thread, like locking and pinning. Requires authentication.

Parameters:
    boardUri: board that contains the thread.
    threadId: id of the thread to be managed.
    lock: indicates if the thread must be locked. Any value sent will lock, if not sent, will unlock.
    pin: indicates if the thread must be pinned. Any value will pin, if not sent, will unpin.
    cyclic: indicates if the thread must be set on cyclic mode. Any value will put in cyclic mode. If not sent, will remove cyclic mode.

------------------------------------------------------------------------------------------

PAG_ID::23

Name: captcha

Description: returns a captcha image in png format. Uses get parameters.

Parameters:
    captchaId: optional parameter used to specify the id of the captcha image to be displayed instead of using the id provided by the cookie.

------------------------------------------------------------------------------------------

PAG_ID::24

Name: changeAccountSettings

Description: changes general account settings.

Parameters:
    email: new e-mail of the account. 64 characters.
    alwaysSignRole: any value indicates the user wishes to always use his role signature on posts.

------------------------------------------------------------------------------------------

PAG_ID::25

Name: changeAccountPassword

Description: changes account password.

Parameters: 
    password: current password.
    newPassword: new password.
    confirmation: repeat of new password.

------------------------------------------------------------------------------------------

PAG_ID::26

Name: bannerManagement

Description: displays screen to manage board banners. It uses get parameters. Restricted to owner of the board. Requires authentication.

Parameters:
    boardUri: URI of the board to be managed.

Json output(Array): array of existing banners for the board. Each object contains the following fields:
    _id: id of the banner.
    filename: path for the banner.

------------------------------------------------------------------------------------------

PAG_ID::27

Name: createBanner

Description: adds a new banner to the board. Accepts files. Requires an image as the first image sent. Uses only the first file. Requires authentication. Restricted to the board owner.

Parameters:
    boardUri: board to add the banner to.

------------------------------------------------------------------------------------------

PAG_ID::28

Name: deleteBanner

Description: deletes a banner. Requires authentication. Restricted to the board owner.

Parameters:
    bannerId: unique identifier of the banner.

------------------------------------------------------------------------------------------

PAG_ID::29

Name: randomBanner

Description: displays a random banner for the specified board. Displays the default banner if no banners are found for the board. Uses get parameters.

Parameters:
    boardUri: board URI.

------------------------------------------------------------------------------------------

PAG_ID::30

Name: setBoardSettings

Description: changes board settings. Requires authentication. Restricted to the board owner.

Parameters:
    boardUri*: board URI.
    boardName*: new name of the board. 32 characters.
    boardDescription*: new description of the board. 128 characters.
    autoCaptchaLimit(Number): a limit that automatically enables captcha if these many threads are created within an hour.
    disableIds: if any value is passed, ids on threads and posts will be disabled.
    hourlyThreadLimit: limit of new threads allowed per hour. If exceeded, the board will lock for thread creation temporarily.
    anonymousName: name to be used when the user is anonymous. 32 character.
    disableCaptcha: if any value is passed, captchas will be disabled.
    forceAnonymity: if any value is passed, the name input is disabled on posting.
    allowCode: if any value is passed, use of code tag will be allowed on markdown.
    boardMessage: new message of the board. 256 characters.
    early404: will delete threads after one hour if they do not receive at least 5 replies.
    tags(Array): array of tags to be used on this board.
    unindex: if any value is passed, the board will not be displayed on the top boards or the boards list.
    archive: enables archiving of content, if the site allows archiving.
    blockDeletion: disables user deletion of content.
    requireThreadFile: requires at least one file for creating threads.

------------------------------------------------------------------------------------------

PAG_ID::31

Name: logs

Description: displays available dates for logs.

Json output(Array): array with the available dates.
    
------------------------------------------------------------------------------------------

PAG_ID::32

Name: filterManagement

Description: page used to manage filters of a board. Uses get parameters. Reserved to board owners. Requires authentication.

Parameters:
    boardUri: URI of the board to have its filters managed.

Json output(Array): array with filters of the board. Each object contains the following fields:
    originalTerm: term to be replaced.
    replacementTerm: term that will replace the original one.

------------------------------------------------------------------------------------------

PAG_ID::33

Name: createFilter

Description: page used to create filters . Uses get parameters. Reserved to board owners. Requires authentication.

Parameters:
    boardUri: URI of the board to have its filters managed.
    originalTerm: word to be filtered. 32 characters.
    replacementTerm: world to be filtered to. 32 characters.

------------------------------------------------------------------------------------------

PAG_ID::34

Name: deleteFilter

Description: page used to delete filters of a board. Uses get parameters. Reserved to board owners. Requires authentication.

Parameters:
    boardUri: uri of the board to have its filter deleted.
    filterIdentifier: identification of the filter to be deleted.

------------------------------------------------------------------------------------------

PAG_ID::34

Name: boardModeration

Description: page used by global admins to moderate boards. It provides tools like board transfer and board deletion to the global staff. Restricted to users with global role lower than 2. Requires authentication. Uses get parameters.

Parameters:
    boardUri: URI of the board be moderated.

Json output(Object): object with the moderation data of the board. Contains the following fields:
    owner: login of the board owner.

------------------------------------------------------------------------------------------

PAG_ID::35

Name: boards

Description: displays all existing boards. Uses get parameters.

Parameters:
    page: page to be viewed.

Json output(Object): object with data regarding the available boards. Contains the following fields:
    pageCount: total amount of available pages.
    boards(Array): array with the available boards. Each object contains the following fields:
        boardUri: uri of the board.
        boardName: name of the board.
        boardDescription: description of the board.
        lastPostId(Number): total amount of posts made on this board so far.
        postsPerHour(Number): how many posts this board received in the last hour.
        tags(Array): array with strings identifying the subjects of the board.

------------------------------------------------------------------------------------------

PAG_ID::36

Name: noCookieCaptcha

Description: page used for solving captchas with cookies disabled. Uses get parameters.

Parameters:
    solvedCaptcha: id of a solved captcha to be displayed.

------------------------------------------------------------------------------------------

PAG_ID::37

Name: solveCaptcha

Description: solves a captcha without invalidating it.

Parameters:
    captchaId: id of the captcha to be solved.
    answer: answer to the captcha.    

------------------------------------------------------------------------------------------

PAG_ID::38

Name: rangeBans

Description: displays the page for management of range bans. Requires authentication. Uses get parameters.

Parameters: 
    boardUri: if informed, will display only range bans for the board.

Json output(Array): array with the range bans found. Each object contains the following fields:
    _id: unique id of the range ban.
    range: range of the ban.

------------------------------------------------------------------------------------------

PAG_ID::39

Name: placeRangeBan

Description: creates a range ban. Requires authentication. Global range bans are restricted to users with global role lower than 3.

Parameters:
    captcha: captcha input.
    boardUri: if not informed, the range ban will be global.
    range: range to be banned.    

------------------------------------------------------------------------------------------

PAG_ID::40

Name: hashBans

Description: displays the page for management of hash bans. Requires authentication. Uses get parameters.

Parameters: 
    boardUri: if informed, will display only hash bans for the board.

Json output(Array): array with the hash bans. Each object contains the following fields:
    _id: unique id of the hash ban.
    md5: banned hash.

------------------------------------------------------------------------------------------

PAG_ID::41

Name: placeHashBan

Description: creates a hash ban that will keep files with this hash to be posted. Requires authentication. Global hash bans require global role lower than 3.

Parameters:
    boardUri: if not informed, the hash ban will be global.
    hash: banned MD5 hash. 32 characters.

------------------------------------------------------------------------------------------

PAG_ID::42

Name: liftHashBan

Description: lifts a hash ban. Requires authentication.

Parameters:
    hashBanId: id of the hash ban to be removed.

------------------------------------------------------------------------------------------

PAG_ID::43

Name: setCustomCss

Description: uploads a custom CSS for a board. Requires authentication. Allowed only for board owners. If no file is sent, any set file will be removed.

Parameters:
    boardUri: URI of the board to have it's custom CSS managed.

------------------------------------------------------------------------------------------

PAG_ID::44

Name: rules

Description: displays the page used to manage a board rule's. Requires authentication. Restricted to the board owner. Uses get parameters.

Parameters: 
    boardUri: URI of the board the user wishes to manage it's rules.

Json output(Array): array with the board rules.

------------------------------------------------------------------------------------------

PAG_ID::45

Name: createRule

Description: adds a new rule to a board. Requires authentication. Restricted to the board owner.

Parameters:
    boardUri: URI of the board the user wishes to add a new rule to.
    rule: text of the rule. 512 characters.

------------------------------------------------------------------------------------------

PAG_ID::46

Name: deleteRule

Description: deletes a rule from a board. Requires authentication. Restricted to the board owner.

Parameters:
    boardUri: URI of the board to have a rule deleted.
    ruleIndex: index of the rule to be deleted.

------------------------------------------------------------------------------------------

PAG_ID::47

Name: edit

Description: displays a page used to edit posts and threads. Requires authentication. Restricted to global staff and board staff. Uses get parameters.

Parameters:
    boardUri: URI of the board to have a posting edited.
    threadId: id of the thread to be edited.
    postId: id of the post to be edited.

Json output(Object): object with the data pertinent to the post being edited. Contains the following fields:
    message: original message of the posting.
    
------------------------------------------------------------------------------------------

PAG_ID::48

Name: saveEdit

Description: saves a new message for a posting. Requires authentication. Restricted to global staff and board staff.

Parameters:
    boardUri: URI of the board to have a posting edited.
    message*: new message of the posting. 2048 characters.
    threadId: id of the thread to be edited.
    postId: id of the post to be edited.
    
------------------------------------------------------------------------------------------

PAG_ID::49

Name: flags

Description: displays the flag management page of a board. Uses get parameters, requires authentication, reserved for the board owner.

Parameters:
    boardUri: URI of the board to have the flags managed.

Json output(Array): array of flags of the board. Each object contains the following fields:
    _id: unique id of the flag.
    name: name of the flag.

------------------------------------------------------------------------------------------

PAG_ID::50

Name: createFlag

Description: creates a new flag for the board. Requires authentication, reserved for the board owner. Requires one image uploaded.

Parameters:
    boardUri: URI of the board.
    flagName: name of the new flag. 16 characters.

------------------------------------------------------------------------------------------

PAG_ID::51

Name: deleteFlag

Description: Deletes a flag. Requires authentication, reserved for the board owner.

Parameters:
    flagId: id of the flag to be deleted.

------------------------------------------------------------------------------------------

PAG_ID::52

Name: globalSettings

Description: displays the page that allows for the user to change global settings. Requires authentication. Restricted to root users.

Json output(Object): object with the current global settings. It contains the following fields:
    address: address to connect to.
    port(Number): port to listen to.
    autoSageLimit(Number): how many posts a thread must received before it stops being bumped.
    tempDirectory: temporary directory to be used.
    emailSender: e-mail to be used for sender when sending automated e-mail.
    siteTitle: site title to be used.
    maxRequestSizeMB(Number): maximum allowed request size in megabytes.
    maxBoardTags(Number): maximum number allowed to be used for board tags.
    verbose(Boolean): indicates if the server must use verbose mode.
    disableFloodCheck(Boolean): indicates if the server must not block posts on flood.
    mediaThumb(Boolean): indicates if the server will generate thumbnails for media files.
    serveArchive(Boolean): indicates if the server will serve archives.
    fePath: path to the front-end to be used.
    pageSize(Number): how many threads should be displayed by page.
    latestPostCount(Number): how many posts must be displayed per thread on board pages.
    maxFiles(Number): how many files can be uploaded at once when posting.
    maxThreadCount(Number): how many threads a board is allowed to have.
    captchaExpiration(Number): how many minutes must pass before captchas expire.
    maxFileSizeMB(Number): maximum size allowed for files in megabytes.
    acceptedMimes(Array): array of valid mimes for uploads on posts.
    topBoardsCount(Number): how many boards should be picked for top boards.
    boardsPerPage(Number): how many boards should be displayed on the boards page.
    torSource: url to be used to fetch ips of tor exit nodes.
    maxBoardRules(Number): maximum number of rules boards can have.
    thumbSize(Number): maximum dimension of thumbnails. Both for height and width.
    maxFilters(Number): maximum number of filters a board can have.
    maxBoardVolunteers(Number): maximum number of volunteers a board can have.
    maxBannerSizeKB(Number): maximum size banners can have in kilobytes.
    maxFlagSizeKB(Number): maximum size flags can have in kilobytes.
    floodTimerSec(Number): minimum time in seconds users must wait between posts.
    archiveLevel(Number): indicates what should be archived.
    captchaFonts(Array): array of paths to font files to be used on captcha.
    torAccess(Number): level of access for tor users.
    proxyAccess(Number): level of access for proxy users.
    clearIpMinRole(Number): minimum global role required so an user must be able to see non-hashed ips from users.
    thumbExtension: extension to be used on thumbnails.
    allowGlobalBoardModeration(Boolean): indicates the global staff are allowed to moderate boards.
    boardCreationRequirement(Number): indicates the minimum global role required for board creation.
    addons(Array): array of loaded addons.
    useGlobalBanners(Boolean): indicates that boards are using global banners.
    allowBoardCustomJs(Boolean): indicates that boards are allowed to have custom javascript.
    globalLatestPosts(Number): amount of latest global latest posts that show appear on the front-page.
    forceCaptcha(Boolean): indicates if all boards are forced to use captcha.
    tcpPort(Number): port being used for TCP.
    overboard: uri of the overboard.
    overBoardThreadCount(Number): amount of threads displayed on the overboard.
    bypassDurationHours(Number): amount of hours a block bypass lasts.
    bypassMaxPosts(Number): amount of uses a block bypass lasts.
    bypassMode(Number): mode for block bypass.

------------------------------------------------------------------------------------------

PAG_ID::53

Name: saveGlobalSettings

Description: saves global settings. Requires authentication. Restricted to root users. Blank parameters will revert to the default.

Parameters:
    address: address to bind the server to.
    port(Number): port to be used by the server.
    fePath: path to the front-end directory to be used.
    boardPageSize(Number): amount of threads per board page.
    latestPostsCount(Number): amount of posts to be displayed on each thread on board pages.
    autoSageLimit(Number): amount of posts a thread can have before it enters auto-sage.
    threadLimit(Number): maximum amount of threads a board can have.
    tempDir: temporary directory to be used.
    senderEmail: sender e-mail to be used on automated e-mails.
    captchaExpiration(Number): amount of minutes before captchas expire.
    captchaFonts(Array): array of paths in the system of font files to be used by the captcha.
    siteTitle: title of the site.
    maxRequestSize(Number): maximum size in MB of incoming requests.
    maxFileSize(Number): maximum size in MB of uploaded files.
    acceptedMimes(Array): array of mimetypes allowed for uploads.
    maxFiles(Number): maximum amount of files to be uploaded at once.
    banMessage: message to be displayed on banned posts.
    anonymousName: name to be used by default when the user does not input a name and the board owner didn't set one.
    topBoardsCount(Number): amount of boards to be picked as top boards.
    boardsPerPage(Number): amount of boards to be displayed on each page of the board listing.
    torSource: address to be used as the source of TOR exit nodes ip list.
    languagePack: path to an optional language pack.
    thumbSize(Number): maximum dimension for thumbnails.
    maxRules(Number): maximum amount of rules a board can have.
    maxFilters(Number): maximum amount of filters a board can have.
    maxVolunteers(Number): maximum amount of volunteers a board can have.
    maxBannerSize(Number): maximum size in KB allowed for banners.
    maxFlagSize(Number): maximum size in KB allowed for flags. 
    floodInterval(Number): amount of seconds users must wait before posting again so their post won't be discarded as flood.
    disable304(Boolean): disabled http response 304.
    verbose(Boolean): enables verbose mode on the server.
    mediaThumb(Boolean): generated thumbnails from media files.
    maintenance(Boolean): sets the server to maintenance mode.
    disableAccountCreation(Boolean): disables account creation.
    boardCreationRequirement(Number): defines the minimum global role required for users to create boards.
    multipleReports(Boolean): enables users to report multiple posts at once.
    serveArchive(Boolean): sets the server to serve archived files.
    archiveLevel(Number): level of archiving. 0 = no archives. 1 = only pages. 2 = pages and files.
    maxTags(Number): maximum amount of tags per board.
    disableFloodCheck(Boolean): disables flood checks.
    torAccess(Number): access for tor users.
    proxyAccess(Number): access for proxy users.    
    clearIpMinRole(Number): minimum global role required so an user must be able to see non-hashed ips from users.
    thumbExtension: extension to be used on thumbnails.
    allowGlobalBoardModeration(Boolean): allows global staff to moderate boards.
    addons(Array): array of addons to be loaded.
    useGlobalBanners(Boolean): makes boards use the global banners.
    allowBoardCustomJs(Boolean): allows for boards to have custom javascript.
    globalLatestPosts(Number): amount of latest global latest posts that show appear on the front-page.
    forceCaptcha(Boolean): makes all boards use captcha.
    tcpPort(Number): port to be used for TCP.
    overboard: uri of the overboard.
    overBoardThreadCount(Number): amount of threads displayed on the overboard.
    bypassDurationHours(Number): amount of hours a block bypass lasts.
    bypassMaxPosts(Number): amount of uses a block bypass lasts.
    bypassMode(Number): mode for block bypass.

------------------------------------------------------------------------------------------

PAG_ID::54

Name: setCustomSpoiler

Description: uploads a custom spoiler for a board. Requires authentication. Allowed only for board owners. If no file is sent, any set file will be removed.

Parameters:
    boardUri: URI of the board to have it's custom spoiler image managed.

------------------------------------------------------------------------------------------

PAG_ID::55

Name: archiveDeletion

Description: displays the page used to delete content from archive. Reserved for root and admins. Requires authentication.

------------------------------------------------------------------------------------------

PAG_ID::56

Name: deleteArchivedBoard

Description: deletes all files and threads from an archived board. Reserved for root and admins. Requires authentication.

Parameters:
    boardUri: uri of the board to be removed from files.

------------------------------------------------------------------------------------------

PAG_ID::57

Name: deleteArchivedThread

Description: deletes a thread from the archives. Reserved for root and admins. Requires authentication.

Parameters:
    boardUri: uri of the board containing the thread.
    threadId: id of the thread to be removed.

------------------------------------------------------------------------------------------

PAG_ID::58

Name: deleteArchivedUpload

Description: deletes an upload from the archives. Reserved for root and admins. Requires authentication.

Parameters:
    boardUri: uri of the board containing the thread.
    filename(Array): names of the files to be removed.

------------------------------------------------------------------------------------------

PAG_ID::59

Name: deleteFromIp

Description: deletes posts and threads from an ip from multiple boards. Requires authentication. Reserved for users with an role equal or lower than the global setting clearIpMinRole.

Parameters:
    ip*: ip to have its posts deleted.
    boards: uri of the boards to have posts from the informed ip deleted. If not informed, the posts from the ip will be deleted from all boards.

------------------------------------------------------------------------------------------

PAG_ID::60

Name: setCustomJs

Description: uploads a custom javascript for a board. Requires authentication. Reserved for board owners. If no file is sent, removes the custom js from the board.

Parameters:
    boardUri: uri of the board to have its's custom javascrip edited.

------------------------------------------------------------------------------------------

PAG_ID::61

Name: transferThread

Description: transfers a thread from a board to another. Requires authentication. Reserved for global staff.

Parameters:
    boardUri: uri of the board that contains the thread to be transferred.
    threadId: id of the thread to be transferred.
    boardUriDestination: uri of the board that will receive the thread.

------------------------------------------------------------------------------------------

PAG_ID::62

Name: proxyBans

Description: page that displays the proxy ban management.

Parameters:
    boardUri: uri of the board to be managed. If not informed, global proxy bans will be managed.
    
Json output(Array): array with the proxy bans. Each object contains the following fields:
    _id: id of the ban.
    ip: banned proxy ip.

------------------------------------------------------------------------------------------

PAG_ID::63

Name: placeProxyBan

Description: creates a new proxy ban.

Parameters:
    boardUri: uri of the board where the proxy will be banned from. If not informed, will place a global proxy ban.
    proxyIp: ip of the proxy to be banned.
    captcha: captcha input.

------------------------------------------------------------------------------------------

PAG_ID::64

Name: liftProxyBan

Description: deletes a proxy ban.

Parameters:
    proxyBanId: id of the proxy ban to be removed    

------------------------------------------------------------------------------------------

PAG_ID::65

Name: blockBypass

Description: displays the page that allows the user to renew a block bypass and indicates if he has a valid block bypass token. 

------------------------------------------------------------------------------------------

PAG_ID::66

Name: renewBypass

Description: allows the user to renew his block bypass.

Parameters:
    captcha: captcha input. 

------------------------------------------------------------------------------------------

*: mandatory parameters.
